AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Kinesis Sample

Parameters:
  FirehoseDestBucketName:
    Type: String
  KinesisStreamName:
    Type: String
  KinesisFirehoseName:
    Type: String

Resources:
  FirehoseDestBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref FirehoseDestBucketName
      AccessControl: Private

  FirehoseDestBucket2:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${FirehoseDestBucketName}-2'
      AccessControl: Private

  deliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'
      Path: "/"
      Policies:
        - PolicyName: firehose_delivery_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${FirehoseDestBucket}'
                  - !Sub 'arn:aws:s3:::${FirehoseDestBucket}/*'
                  - !Sub 'arn:aws:s3:::${FirehoseDestBucket}-2'
                  - !Sub 'arn:aws:s3:::${FirehoseDestBucket}-2/*'

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Timeout: 10
      Tracing: Active
      Runtime: nodejs10.x
      Events:
        Stream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt KinesisStream.Arn
            BatchSize: 100
            StartingPosition: LATEST

  LambdaFunction2:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app2.lambdaHandler
      Timeout: 60
      Tracing: Active
      Runtime: nodejs10.x

  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Ref KinesisStreamName
      RetentionPeriodHours: 24
      ShardCount: 1

  KinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Ref KinesisFirehoseName
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub 'arn:aws:s3:::${FirehoseDestBucket}'
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CloudWatchLoggingOptions:
          Enabled: 'true'
          LogGroupName: KinesisFirehoseCloudWatchSampleLogGroup
          LogStreamName: S3Delivery
        CompressionFormat: UNCOMPRESSED
        # Prefix: tests
          # => testsYYYY/MM/DD/HH/${KinesisFirehoseName}-1-yyyy-mm-dd-hh-mm-ss-***
        Prefix: 'tests2/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
          # => tests2/year=YYYY/month=MM/day=DD/hour=HH/...
          # {timestamp:xxxx} などにしてもErrorにはならない (+0000に変換された)
        ErrorOutputPrefix: errors
        RoleARN: !GetAtt deliveryRole.Arn

  KinesisFirehose2:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub '${KinesisFirehoseName}-2'
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub 'arn:aws:s3:::${FirehoseDestBucket}-2'
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CloudWatchLoggingOptions:
          Enabled: 'true'
          LogGroupName: KinesisFirehoseCloudWatchSampleLogGroup2
          LogStreamName: S3Delivery
        CompressionFormat: UNCOMPRESSED
        Prefix: tests
        ErrorOutputPrefix: errors
        ProcessingConfiguration:
          Enabled: 'true'
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt LambdaFunction2.Arn
              Type: Lambda
        RoleARN: !GetAtt deliveryRole.Arn

Outputs:
  FunctionName:
    Description: "Lambda Function ARN"
    Value: !GetAtt LambdaFunction.Arn
  StreamARN:
    Description: "Stream ARN"
    Value: !GetAtt KinesisStream.Arn
